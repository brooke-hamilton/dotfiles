name: Test Radius PR Dev Container

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to build dev container for'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/radius-pr-devcontainer

jobs:
  test-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout dotfiles repo
        uses: actions/checkout@v4

      - name: Get PR details
        id: pr-details
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: 'radius-project',
              repo: 'radius',
              pull_number: ${{ github.event.inputs.pr_number }}
            });
            
            core.setOutput('branch', pr.head.ref);
            core.setOutput('sha', pr.head.sha);
            core.setOutput('repo_url', pr.head.repo.clone_url);
            core.setOutput('title', pr.title);

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=pr-${{ github.event.inputs.pr_number }}-test

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./radius/Dockerfile.pr-devcontainer-test
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PR_NUMBER=${{ github.event.inputs.pr_number }}
            PR_BRANCH=${{ steps.pr-details.outputs.branch }}
            PR_SHA=${{ steps.pr-details.outputs.sha }}
            PR_REPO_URL=${{ steps.pr-details.outputs.repo_url }}
            PR_TITLE=${{ steps.pr-details.outputs.title }}

      - name: Output container info
        run: |
          echo "Container built successfully!"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.inputs.pr_number }}-test"
          echo "To run: docker run -it --privileged -p 8081:8081 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.inputs.pr_number }}-test"